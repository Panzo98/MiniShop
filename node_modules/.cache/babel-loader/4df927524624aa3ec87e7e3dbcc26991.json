{"ast":null,"code":"var _jsxFileName = \"/Users/marakaran/Desktop/shop/shoponline/src/Pocetna.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Podaci from \"./Podaci\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pocetna() {\n  _s();\n\n  const [cartIco, setCartNum] = useState(0); //prikaz broja artikala u korpici\n\n  const [cartItems, setCartItems] = useState([]); //artikli u korpici\n\n  function getIndex(value, arr, prop) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i][prop] === value) {\n        return i;\n      }\n    }\n\n    return -1; //to handle the case where the value doesn't exist\n  }\n\n  const gotivnaFunkcija = e => {\n    if (cartItems.some(element => element.id === e)) {\n      //ako artikal vec postoji u korpici\n      let kopija = cartItems; //   kopiranje niza objekata iz korpice u novi\n\n      var index = getIndex(e, kopija, \"id\");\n      kopija[index].kolicina += 1; //   izmjena kolicine pod tim id-om objekta\n\n      setCartItems(kopija); //   update korpice izmjenjenim nizom objekata\n\n      console.log(cartItems[e].kolicina);\n    } else {\n      //ako artikal ne postoji u korpici\n      const obj = {\n        id: e,\n        naziv: \"edit\",\n        kolicina: 1\n      }; //prvo dodavanje artikla po tom IDu\n\n      setCartItems([...cartItems, obj]); //dodavanje novog objekta u korpicu\n\n      setCartNum(cartIco + 1); //povecavanje broja koji prikazuje koliko je artikala u korpici\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      cartIco: cartIco\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Podaci, {\n      gotivnaFunkcija: gotivnaFunkcija\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Pocetna, \"mxjWXM9o+D87lWOA3anQTQtFzv0=\");\n\n_c = Pocetna;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pocetna\");","map":{"version":3,"sources":["/Users/marakaran/Desktop/shop/shoponline/src/Pocetna.js"],"names":["React","useState","Podaci","Header","Pocetna","cartIco","setCartNum","cartItems","setCartItems","getIndex","value","arr","prop","i","length","gotivnaFunkcija","e","some","element","id","kopija","index","kolicina","console","log","obj","naziv"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC,CADgC,CACW;;AAC3C,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C,CAFgC,CAEgB;;AAChD,WAASQ,QAAT,CAAkBC,KAAlB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AAClC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAIF,GAAG,CAACE,CAAD,CAAH,CAAOD,IAAP,MAAiBF,KAArB,EAA4B;AAC1B,eAAOG,CAAP;AACD;AACF;;AACD,WAAO,CAAC,CAAR,CANkC,CAMvB;AACZ;;AAED,QAAME,eAAe,GAAIC,CAAD,IAAO;AAC7B,QAAIT,SAAS,CAACU,IAAV,CAAgBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeH,CAA3C,CAAJ,EAAmD;AACjD;AACA,UAAII,MAAM,GAAGb,SAAb,CAFiD,CAEzB;;AACxB,UAAIc,KAAK,GAAGZ,QAAQ,CAACO,CAAD,EAAII,MAAJ,EAAY,IAAZ,CAApB;AACAA,MAAAA,MAAM,CAACC,KAAD,CAAN,CAAcC,QAAd,IAA0B,CAA1B,CAJiD,CAIpB;;AAC7Bd,MAAAA,YAAY,CAACY,MAAD,CAAZ,CALiD,CAK3B;;AACtBG,MAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAS,CAACS,CAAD,CAAT,CAAaM,QAAzB;AACD,KAPD,MAOO;AACL;AACA,YAAMG,GAAG,GAAG;AAAEN,QAAAA,EAAE,EAAEH,CAAN;AAASU,QAAAA,KAAK,EAAE,MAAhB;AAAwBJ,QAAAA,QAAQ,EAAE;AAAlC,OAAZ,CAFK,CAE8C;;AACnDd,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAekB,GAAf,CAAD,CAAZ,CAHK,CAG8B;;AACnCnB,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV,CAJK,CAIoB;AAC1B;AACF,GAdD;;AAgBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,eAAe,EAAEU;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GAlCuBX,O;;KAAAA,O","sourcesContent":["import React, { useState } from \"react\";\nimport Podaci from \"./Podaci\";\nimport Header from \"./Header\";\n\nexport default function Pocetna() {\n  const [cartIco, setCartNum] = useState(0); //prikaz broja artikala u korpici\n  const [cartItems, setCartItems] = useState([]); //artikli u korpici\n  function getIndex(value, arr, prop) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i][prop] === value) {\n        return i;\n      }\n    }\n    return -1; //to handle the case where the value doesn't exist\n  }\n\n  const gotivnaFunkcija = (e) => {\n    if (cartItems.some((element) => element.id === e)) {\n      //ako artikal vec postoji u korpici\n      let kopija = cartItems; //   kopiranje niza objekata iz korpice u novi\n      var index = getIndex(e, kopija, \"id\");\n      kopija[index].kolicina += 1; //   izmjena kolicine pod tim id-om objekta\n      setCartItems(kopija); //   update korpice izmjenjenim nizom objekata\n      console.log(cartItems[e].kolicina);\n    } else {\n      //ako artikal ne postoji u korpici\n      const obj = { id: e, naziv: \"edit\", kolicina: 1 }; //prvo dodavanje artikla po tom IDu\n      setCartItems([...cartItems, obj]); //dodavanje novog objekta u korpicu\n      setCartNum(cartIco + 1); //povecavanje broja koji prikazuje koliko je artikala u korpici\n    }\n  };\n\n  return (\n    <>\n      <Header cartIco={cartIco} />\n      <Podaci gotivnaFunkcija={gotivnaFunkcija} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}